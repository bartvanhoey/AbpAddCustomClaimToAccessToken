@page "/books"
@* @attribute [Authorize(BookStorePermissions.Books.Default)] *@
@using BookStore.Permissions
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.Application.Dtos
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.AspNetCore.Components.Web
@using BookStore.Application.Contracts.Books
@using BookStore.Domain.Shared.Books
@using BookStore.Localization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<BookStoreResource> L
@inject AbpBlazorMessageLocalizerHelper<BookStoreResource> LH
@inherits AbpCrudPageBase<IBookAppService, BookDto, Guid, PagedAndSortedResultRequestDto, CreateBookDto, UpdateBookDto>

<Card>
  <CardHeader>
    <Row  Class="justify-content-between">
      <Column ColumnSize="ColumnSize.IsAuto">
        <h2>@L["Books"]</h2>
      </Column>
      <Column ColumnSize="ColumnSize.IsAuto">
        @if (HasCreatePermission)
        {
          <Button Color="Color.Primary" Clicked="OpenCreateModalAsync">@L["NewBook"]</Button>
        }
      </Column>
    </Row>
  </CardHeader>

  <CardBody>
    <DataGrid TItem="BookDto" Data="Entities" ReadData="OnDataGridReadAsync" TotalItems="TotalCount" ShowPager="true" PageSize="PageSize">
      <DataGridColumns>
        <DataGridEntityActionsColumn TItem="BookDto" @ref="@EntityActionsColumn">
          <DisplayTemplate>
            <EntityActions TItem="BookDto" EntityActionsColumn="@EntityActionsColumn">
              <EntityAction TItem="BookDto" Text="@L["Edit"]" Visible="HasUpdatePermission" Clicked="() => OpenEditModalAsync(context)" />
              <EntityAction TItem="BookDto" Text="@L["Delete"]" Visible="HasDeletePermission" Clicked="() => DeleteEntityAsync(context)" ConfirmationMessage="() => GetDeleteConfirmationMessage(context)" />
            </EntityActions>
          </DisplayTemplate>
        </DataGridEntityActionsColumn>
        <DataGridColumn TItem="BookDto" Field="@nameof(BookDto.Name)" Caption="@L["BookName"]"></DataGridColumn>
        <DataGridColumn TItem="BookDto" Field="@nameof(BookDto.Type)" Caption="@L["BookType"]">
            <DisplayTemplate>
                @L[$"Enum:BookType:{(int)context.Type}"]
            </DisplayTemplate>
        </DataGridColumn>

        <DataGridColumn TItem="BookDto" Field="@nameof(BookDto.PublishDate)" Caption="@L["BookPublishDate"]">
            <DisplayTemplate>
                @context.PublishDate.ToShortDateString()
            </DisplayTemplate>
        </DataGridColumn>

        <DataGridColumn TItem="BookDto" Field="@nameof(BookDto.Price)" Caption="@L["BookPrice"]"></DataGridColumn>
        <DataGridColumn TItem="BookDto" Field="@nameof(BookDto.CreationTime)" Caption="@L["BookCreationTime"]">
            <DisplayTemplate>
                @context.CreationTime.ToLongDateString()
            </DisplayTemplate>
        </DataGridColumn>
        
        
      </DataGridColumns>
    </DataGrid>
  </CardBody>
</Card>



@code
{
  public Books()
  {
    @* CreatePolicyName = BookStorePermissions.Books.Create; *@
    @* UpdatePolicyName = BookStorePermissions.Books.Update; *@
    @* DeletePolicyName = BookStorePermissions.Books.Delete; *@
  }
}